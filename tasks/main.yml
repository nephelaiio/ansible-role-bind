---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"

- name: gather service facts
  service_facts:

- block:

    - name: disable systemd-resolved
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: no
        masked: yes
      register: systemd_resolve_disable

    - name: disable systemd-resolved resolv.conf override
      file:
        state: linkt
        src: /run/systemd/resolve/resolv.conf
        dest: /etc/resolv.conf
      when: systemd_resolve_disable is changed

  when: "'systemd-resolved.service' in ansible_facts.services"

- name: install bind yum packages
  yum:
    name: "{{ bind_packages | default(bind_packages_default) }}"
    state: "{{ bind_packages_state }}"
    update_cache: yes
  when: ansible_os_family | lower == 'redhat'

- name: install bind packages
  apt:
    name: "{{ bind_packages | default(bind_packages_default) }}"
    state: "{{ bind_packages_state }}"
    update_cache: yes
  when: ansible_os_family | lower == 'debian'

- name: register configuration file locations
  set_fact:
    conf_global_path: "{{ bind_conf_global_path | default(bind_conf_global_path_default) }}"
    conf_options_path: "{{ bind_conf_options_path | default(bind_conf_options_path_default) }}"
    conf_local_path: "{{ bind_conf_local_path | default(bind_conf_local_path_default) }}"
    conf_daemon_path: "{{ bind_conf_daemon_path | default(bind_conf_daemon_path_default) }}"

- name: configure daemon options
  lineinfile:
    regexp: '^OPTIONS='
    line: "OPTIONS=\"{{ bind_options }}\""
    dest: "{{ conf_daemon_path }}"
    insertafter: EOF
  when:
    - conf_daemon_path | length > 0
  notify: restart bind

- name: detect configuration permissions
  stat:
    path: "{{ conf_global_path }}"
  register: bind_permissions

- name: create configuration directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ bind_permissions.stat.pw_name | default('root') }}"
    group: "{{ bind_permissions.stat.gr_name | default('root') }}"
  with_items:
    - "{{ conf_global_path | dirname }}"
    - "{{ conf_options_path | dirname }}"
    - "{{ conf_local_path | dirname }}"

- name: initialize configuration files
  copy:
    dest: "{{ item }}"
    content: ''
    force: no
    owner: "{{ bind_permissions.stat.pw_name | default('root') }}"
    group: "{{ bind_permissions.stat.gr_name | default('root') }}"
  with_items:
    - "{{ conf_global_path }}"
    - "{{ conf_options_path }}"
    - "{{ conf_local_path }}"

- name: manage global configuration file
  template:
    src: named.conf.j2
    dest: "{{ conf_global_path }}"
    owner: "{{ bind_permissions.stat.pw_name | default('root') }}"
    group: "{{ bind_permissions.stat.gr_name | default('root') }}"
  vars:
    conf: "{{ bind_conf_global | default(bind_conf_global_default) | named_conf }}"
  notify: restart bind

- name: manage options configuration file
  template:
    src: "{{ bind_conf_template }}"
    dest: "{{ conf_options_path }}"
    owner: "{{ bind_permissions.stat.pw_name | default('root') }}"
    group: "{{ bind_permissions.stat.gr_name | default('root') }}"
  vars:
    conf: "{{ bind_conf_options | default(bind_conf_options_default) | named_conf }}"
  notify: restart bind

- name: manage local configuration file
  template:
    src: named.conf.j2
    dest: "{{ conf_local_path }}"
    owner: "{{ bind_permissions.stat.pw_name | default('root') }}"
    group: "{{ bind_permissions.stat.gr_name | default('root') }}"
  vars:
    conf: "{{ bind_conf_local | named_conf }}"
  when:
    - bind_conf_local is defined
  notify: restart bind

- name: manage bind services
  service:
    name: "{{ bind_service_name | default(bind_service_name_default) }}"
    state: "{{ bind_service_status }}"
    enabled: "{{ bind_service_enabled }}"
