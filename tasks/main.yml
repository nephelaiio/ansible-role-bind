---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

- name: Install bind packages
  become: yes
  package:
    name: "{{ item }}"
    state: "{{ bind_packages_state }}"
  with_items: "{{ bind_packages }}"

- name: configure daemon options
  become: yes
  lineinfile:
    regexp: '^OPTIONS='
    line: "OPTIONS=\"{{ bind_options }}\""
    dest: "{{ bind_conf_daemon_path }}"
    insertafter: EOF
  when:
    - bind_conf_daemon_path != None
    - bind_conf_daemon_path != ''
  notify: restart bind

- name: detect configuration permissions
  become: yes
  stat:
    path: "{{ bind_conf_global_path }}"
  register: bind_permissions

- name: initialize configuration files
  become: yes
  copy:
    dest: "{{ item }}"
    content: ''
    force: no
    owner: "{{ bind_permissions.stat.pw_name }}"
    group: "{{ bind_permissions.stat.gr_name }}"
  with_items:
    - "{{ bind_conf_global_path }}"
    - "{{ bind_conf_options_path }}"
    - "{{ bind_conf_local_path }}"

- name: manage global configuration file
  template:
    src: named.conf.j2
    dest: "{{ bind_conf_global_path }}"
    owner: "{{ bind_permissions.stat.pw_name }}"
    group: "{{ bind_permissions.stat.gr_name }}"
  vars:
    conf: "{{ bind_conf_global | named_conf }}"
  when:
    - bind_conf_global is defined
    - bind_conf_global != None
  notify: restart bind

- name: manage options configuration file
  template:
    src: named.conf.j2
    dest: "{{ bind_conf_options_path }}"
  vars:
    conf: "{{ bind_conf_options | named_conf }}"
  when:
    - bind_conf_options is defined
    - bind_conf_options != None
  notify: restart bind

- name: manage local configuration file
  template:
    src: named.conf.j2
    dest: "{{ bind_conf_local_path }}"
  vars:
    conf: "{{ bind_conf_local | named_conf }}"
  when:
    - bind_conf_local is defined
    - bind_conf_local != None
  notify: restart bind

- name: manage bind services
  become: yes
  service:
    name: "{{ bind_service_name }}"
    state: "{{ bind_service_status }}"
    enabled: "{{ bind_service_enabled }}"
